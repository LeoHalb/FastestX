{"version":3,"file":"static/js/main.17ba37ee.js","mappings":"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","sources":["components/ActivityMap.js","components/Activity.js","components/Feed.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {ExpoLeaflet} from 'expo-leaflet'\nimport {polygonCenter} from \"leaflet/src/geometry/PolyUtil\";\nimport {EPSG3857} from \"leaflet/src/geo/crs/CRS.EPSG3857\";\nimport {ActivityIndicator, Pressable} from 'react-native'\n\nexport const ActivityMap = (props) => {\n\n    const center = polygonCenter(props.positions.latlng, EPSG3857)\n\n    const mapLayers = [{\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>',\n        baseLayerIsChecked: true,\n        baseLayerName: 'OpenStreetMap',\n        layerType: 'TileLayer',\n        url:\n            'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    }]\n\n    const mapShapes = [\n        {\n            shapeType: 'polyline',\n            color: \"#123123\",\n            id: \"1\",\n            positions: props.positions.latlng.map(el => ({lat: el[0], lng: el[1]}))\n        },\n        {\n            shapeType: 'polyline',\n            color: \"#fc5200\",\n            id: \"2\",\n            positions: props.positions.fastestLatlng.map(el => ({lat: el[0], lng: el[1]}))\n        }\n    ]\n\n    const mapOptions = {\n        zoomControl: false,\n    }\n\n    const initialPosition = {\n        lat: center.lat,\n        lng: center.lng,\n    }\n\n    return (\n        <>\n            <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.0.3/dist/leaflet.css\"/>\n            <Pressable onPressOut={e => console.log(e)} style={{width: \"100%\", height: 260}}>\n                <ExpoLeaflet\n                    loadingIndicator={() => <ActivityIndicator/>}\n                    onMessage={() => {\n                    }}\n                    mapCenterPosition={initialPosition}\n                    mapLayers={mapLayers}\n                    mapOptions={mapOptions}\n                    mapShapes={mapShapes}\n                />\n            </Pressable>\n\n        </>\n    )\n\n}","import React, {useState, useEffect} from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ActivityIndicator,\n    Pressable,\n    LayoutAnimation\n} from \"react-native\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport {FontAwesome5} from '@expo/vector-icons';\nimport {MaterialCommunityIcons} from '@expo/vector-icons';\nimport * as Linking from 'expo-linking';\nimport {ActivityMap} from \"./ActivityMap\";\n// import { ActivityMap } from './ActivityMap'\n\nexport default function Activity(props) {\n\n    useEffect(() => {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n        setExpanded(false)\n        setFastestDistance('')\n        setDistanceMeasure(props.distanceMeasure)\n        setTimeMeasure(props.timeMeasure)\n        setLoading(false)\n        setPositions({latlng: [], fastestLatlng: []})\n    }, [props.distanceMeasure, props.timeMeasure])\n\n    const [fastestDistance, setFastestDistance] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [expanded, setExpanded] = useState(false)\n    const [distanceMeasure, setDistanceMeasure] = useState('1000')\n    const [timeMeasure, setTimeMeasure] = useState('')\n    const [positions, setPositions] = useState({latlng: [], fastestLatlng: []})\n\n    useEffect(() => {\n        if (positions.latlng.length > 0 && positions.fastestLatlng.length === 0) {\n            setPositions({\n                ...positions,\n                fastestLatlng: positions.latlng.slice(fastestDistance.range.start, fastestDistance.range.end + 1)\n            })\n        }\n    }, [positions])\n\n    async function findFastestDistance() {\n        const trivial_winner = {\n            start: {distance: 0, time: 0},\n            end: {distance: 0, time: 0},\n            distance: 0,\n            time: 999999999999999,\n            heartrate: 0,\n            elevation: {gain: 0, loss: 0},\n            range: {start: 0, end: 0}\n        }\n\n        if (distanceMeasure === 0 || timeMeasure === 0) {\n            setFastestDistance(trivial_winner)\n        } else if (!fastestDistance && distanceMeasure !== '0' && distanceMeasure !== '' && loading === false) {\n            setLoading(true)\n            const streams = await getStreams(props.activity.id)\n            const altitudeStream = streams.altitude?.data\n            const distanceStream = streams.distance?.data\n            const timeStream = streams.time?.data\n            const heartrateStream = streams.heartrate?.data\n            const latlngStream = streams.latlng?.data\n\n            if (latlngStream) {\n                setPositions({...positions, latlng: latlngStream})\n            }\n\n            let fastestSegment = trivial_winner\n\n            props.activity.total_elevation_gain = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0))\n            props.activity.total_elevation_loss = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n\n            if (distanceMeasure >= props.activity.distance) {\n                setFastestDistance(undefined)\n                return\n            }\n\n            if (distanceStream && timeStream) {\n                const distanceStreamUpperLimit = distanceStream.slice(-1) - distanceMeasure\n\n                for (let i = 0; distanceStream[i] < distanceStreamUpperLimit; i++) {\n                    const j = distanceStream.indexOf(distanceStream.slice(i).find(el => el - distanceStream[i] >= distanceMeasure))\n                    if (j !== -1) {\n                        const currentSegment = {\n                            distance: Math.round((distanceStream[j] - distanceStream[i]) * 10) / 10,\n                            time: timeStream[j] - timeStream[i],\n                            range: {start: i, end: j}\n                        }\n\n                        if (currentSegment.time < fastestSegment.time || (currentSegment.time === fastestSegment.time && currentSegment.distance > fastestSegment.distance)) {\n                            fastestSegment = currentSegment\n                        }\n                    }\n                }\n\n                if (fastestSegment) {\n                    fastestSegment.start = {\n                        distance: distanceStream[fastestSegment.range.start],\n                        time: timeStream[fastestSegment.range.start]\n                    }\n                    fastestSegment.end = {\n                        distance: distanceStream[fastestSegment.range.end],\n                        time: timeStream[fastestSegment.range.end]\n                    }\n                    fastestSegment.pace = timeInHoursAndMinutes(Math.round((1000 / (distanceStream[fastestSegment.range.end] - distanceStream[fastestSegment.range.start])) * (timeStream[fastestSegment.range.end] - timeStream[fastestSegment.range.start])))\n                    fastestSegment.heartrate = Math.round(heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).reduce((acc, curr) => acc + curr, 0) / heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).length)\n\n                    const relevantAltitudeStream = altitudeStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    fastestSegment.elevation = {\n                        gain: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0)),\n                        loss: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n                    }\n                }\n\n                if (positions.latlng.length > 0) {\n                    const fastestLatLng = latlngStream.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    setPositions({...positions, fastestLatLng: fastestLatLng})\n                }\n\n                setLoading(false)\n                LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                setFastestDistance(fastestSegment === trivial_winner ? undefined : fastestSegment)\n            } else {\n                setFastestDistance(undefined)\n            }\n        } else if (!fastestDistance && timeMeasure !== '0' && timeMeasure !== '' && loading === false) {\n            setLoading(true)\n            const streams = await getStreams(props.activity.id)\n            const altitudeStream = streams.altitude?.data\n            const distanceStream = streams.distance?.data\n            const timeStream = streams.time?.data\n            const heartrateStream = streams.heartrate?.data\n            const latlngStream = streams.latlng?.data\n\n            if (latlngStream) {\n                setPositions({...positions, latlng: latlngStream})\n            }\n\n            let fastestSegment = trivial_winner\n\n            props.activity.total_elevation_gain = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0))\n            props.activity.total_elevation_loss = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n\n            if (timeMeasure >= props.activity.elapsed_time) {\n                setFastestDistance(undefined)\n                return\n            }\n\n            if (distanceStream && timeStream) {\n                const timeStreamUpperLimit = timeStream.slice(-1) - timeMeasure\n\n                for (let i = 0; timeStream[i] < timeStreamUpperLimit; i++) {\n                    const j = timeStream.indexOf(timeStream.slice(i).find(el => el - timeStream[i] >= timeMeasure))\n                    if (j !== -1) {\n                        const currentSegment = {\n                            distance: Math.round((distanceStream[j] - distanceStream[i]) * 10) / 10,\n                            time: timeStream[j] - timeStream[i],\n                            range: {start: i, end: j}\n                        }\n\n                        if (currentSegment.time < fastestSegment.time || (currentSegment.time === fastestSegment.time && currentSegment.distance > fastestSegment.distance)) {\n                            fastestSegment = currentSegment\n                        }\n                    }\n                }\n\n                if (fastestSegment) {\n                    fastestSegment.start = {\n                        distance: distanceStream[fastestSegment.range.start],\n                        time: timeStream[fastestSegment.range.start]\n                    }\n                    fastestSegment.end = {\n                        distance: distanceStream[fastestSegment.range.end],\n                        time: timeStream[fastestSegment.range.end]\n                    }\n                    fastestSegment.pace = timeInHoursAndMinutes(Math.round((1000 / (distanceStream[fastestSegment.range.end] - distanceStream[fastestSegment.range.start])) * (timeStream[fastestSegment.range.end] - timeStream[fastestSegment.range.start])))\n                    fastestSegment.heartrate = Math.round(heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).reduce((acc, curr) => acc + curr, 0) / heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).length)\n\n                    const relevantAltitudeStream = altitudeStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    fastestSegment.elevation = {\n                        gain: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0)),\n                        loss: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n                    }\n                }\n\n                if (positions.latlng.length > 0) {\n                    const fastestLatLng = latlngStream.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    setPositions({...positions, fastestLatLng: fastestLatLng})\n                }\n\n                setLoading(false)\n                LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                setFastestDistance(fastestSegment === trivial_winner ? undefined : fastestSegment)\n            } else {\n                setFastestDistance(undefined)\n            }\n        }\n    }\n\n    function timeInHoursAndMinutes(time) {\n        const hours = Math.floor(time / 3600)\n        let rest = time - hours * 3600\n        const minutes = Math.floor(rest / 60)\n        rest = time - minutes * 60 - hours * 3600\n        const seconds = rest < 10 ? `0${rest}` : rest\n        return `${hours !== 0 ? `${hours}:` < 10 ? `0${hours}:` : `${hours}:` : ''}${minutes < 10 ? `0${minutes}` : minutes}:${seconds} ${hours > 0 ? 'h' : 'min'}`\n    }\n\n    const updateLayout = () => {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n        setExpanded(!expanded)\n    };\n\n    async function getStreams(id) {\n        return fetch(`https://www.strava.com/api/v3/activities/${id}/streams?access_token=${props.credentials.accessToken}&keys=time,distance,heartrate,altitude,latlng&key_by_type=true`)\n            .then((res) => res.json())\n    }\n\n    console.log(positions)\n\n    function DrawDistance() {\n        if (fastestDistance === undefined || distanceMeasure === '0' || timeMeasure === '0') {\n            return (\n                <View style={styles.modalContainer}>\n                    <View\n                        style={[styles.modalLine, {justifyContent: \"space-evenly\"}]}\n                    >\n                        <View>\n                            {!isNaN(props.activity.elapsed_time) && props.activity.elapsed_time !== 0 &&\n                                <Ionicons\n                                    style={{textAlign: \"center\", alignSelf: \"center\"}}\n                                    name=\"timer\"\n                                    size={28}\n                                />\n                            }\n                            {!isNaN(props.activity.distance) && props.activity.distance !== 0 &&\n                                <MaterialCommunityIcons\n                                    style={{textAlign: \"center\", alignSelf: \"center\"}}\n                                    name=\"map-marker-distance\"\n                                    size={28}\n                                />\n                            }\n                            {!isNaN(props.activity.average_speed) && props.activity.average_speed !== 0 &&\n                                <>\n                                    <Text\n                                        style={{\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                            alignSelf: \"center\",\n                                            fontSize: 22,\n                                            fontWeight: 'bold'\n                                        }}\n                                    >\n                                        [min/km]\n                                    </Text>\n                                    <Text\n                                        style={{\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                            alignSelf: \"center\",\n                                            fontSize: 22,\n                                            fontWeight: 'bold'\n                                        }}\n                                    >\n                                        [km/h]\n                                    </Text>\n                                </>\n                            }\n                            {!isNaN(props.activity.average_heartrate) && props.activity.average_heartrate !== 0 &&\n                                <Text\n                                    style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        alignSelf: \"center\",\n                                        fontSize: 22,\n                                        fontWeight: 'bold'\n                                    }}\n                                >\n                                    [bpm]\n                                </Text>\n                            }\n                            {!isNaN(props.activity.total_elevation_gain) && props.activity.total_elevation_gain !== 0 &&\n                                <Text\n                                    style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        alignSelf: \"center\",\n                                        fontSize: 22,\n                                        fontWeight: 'bold'\n                                    }}\n                                >\n                                    [m]\n                                </Text>\n                            }\n                        </View>\n                        <View>\n                            {!isNaN(props.activity.elapsed_time) && props.activity.elapsed_time !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`${timeInHoursAndMinutes(props.activity.elapsed_time)}`}\n                                </Text>\n                            }\n                            {!isNaN(props.activity.distance) && props.activity.distance !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`${Math.round(props.activity.distance / 10) / 100} km`}\n                                </Text>\n                            }\n                            {!isNaN(props.activity.average_speed) && props.activity.average_speed !== 0 &&\n                                <>\n                                    <Text\n                                        style={[\n                                            styles.name,\n                                            {textAlign: \"center\"}\n                                        ]}\n                                    >\n                                        {`${timeInHoursAndMinutes(Math.round(1000 / props.activity.average_speed)).replace(' min', '').replace(' h', '')}`}\n                                    </Text>\n                                    <Text\n                                        style={[\n                                            styles.name,\n                                            {textAlign: \"center\"}\n                                        ]}\n                                    >\n                                        {`${Math.round(props.activity.average_speed * 3.6 * 10) / 10}`}\n                                    </Text>\n                                </>\n                            }\n                            {!isNaN(props.activity.average_heartrate) && props.activity.average_heartrate !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`${Math.round(props.activity.average_heartrate)}`}\n                                </Text>\n                            }\n                            {!isNaN(props.activity.total_elevation_gain) && props.activity.total_elevation_gain !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`+${props.activity.total_elevation_gain} / -${props.activity.total_elevation_loss}`}\n                                </Text>\n                            }\n                        </View>\n                    </View>\n                </View>\n            )\n        } else if (fastestDistance) {\n            return (\n                <View style={styles.modalContainer}>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${fastestDistance.distance} m`}\n                        </Text>\n                        <MaterialCommunityIcons\n                            style={{display: \"flex\", alignItems: \"center\"}}\n                            name=\"map-marker-distance\"\n                            size={28}\n                        />\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round(props.activity.distance / 10) / 100} km`}\n                        </Text>\n                    </View>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(fastestDistance.time)}`}\n                        </Text>\n                        <Ionicons\n                            style={{display: \"flex\", alignItems: \"center\"}}\n                            name=\"timer\"\n                            size={28}\n                        />\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(props.activity.elapsed_time)}`}\n                        </Text>\n                    </View>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${fastestDistance.pace.replace(' min', '').replace(' h', '')}`}\n                        </Text>\n                        <Text\n                            style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                        >\n                            [min/km]\n                        </Text>\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(Math.round(1000 / props.activity.average_speed)).replace(' min', '').replace(' h', '')}`}\n                        </Text>\n                    </View>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round((fastestDistance.end.distance - fastestDistance.start.distance) / (fastestDistance.end.time - fastestDistance.start.time) * 3.6 * 10) / 10}`}\n                        </Text>\n                        <Text\n                            style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                        >\n                            [km/h]\n                        </Text>\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round(props.activity.average_speed * 3.6 * 10) / 10}`}\n                        </Text>\n                    </View>\n                    {!isNaN(fastestDistance.heartrate) &&\n                        <View style={[styles.modalLine, {display: \"flex\"}]}>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {flex: 1, marginRight: \"auto\"}\n                                ]}\n                            >\n                                {`${fastestDistance.heartrate}`}\n                            </Text>\n                            <Text\n                                style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                            >\n                                [bpm]\n                            </Text>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                                ]}\n                            >\n                                {`${Math.round(props.activity.average_heartrate)}`}\n                            </Text>\n                        </View>\n                    }\n                    {!isNaN(fastestDistance.elevation.gain) && !isNaN(fastestDistance.elevation.loss) &&\n                        <View style={[styles.modalLine, {display: \"flex\"}]}>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {flex: 1, marginRight: \"auto\"}\n                                ]}\n                            >\n                                {`+${fastestDistance.elevation.gain} / -${fastestDistance.elevation.loss}`}\n                            </Text>\n                            <Text\n                                style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                            >\n                                [m]\n                            </Text>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                                ]}\n                            >\n                                {`+${props.activity.total_elevation_gain} / -${props.activity.total_elevation_loss}`}\n                            </Text>\n                        </View>\n                    }\n\n                    <View style={{width: \"100%\"}}>\n                        <View style={styles.separator}/>\n                    </View>\n\n                    {positions.latlng.length > 0 ? <ActivityMap positions={positions}></ActivityMap> : <></>}\n\n                    <View style={[styles.modalLine, {display: \"flex\", marginTop: 8}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round(fastestDistance.start.distance) / 1000} km`}\n                        </Text>\n                        <FontAwesome5\n                            style={{display: \"flex\", alignItems: \"center\"}}\n                            name=\"at\"\n                            size={24}\n                        />\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(fastestDistance.start.time)}`}\n                        </Text>\n                    </View>\n                </View>\n            )\n        } else if (loading) {\n            return (\n                <ActivityIndicator color=\"black\"/>\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <Pressable\n            style={styles.item}\n            onPressIn={() => {\n                findFastestDistance(props.activity)\n                updateLayout()\n            }}>\n            <Text style={[styles.name, {textAlign: \"center\"}]}>\n                {`${props.activity.name}`}\n            </Text>\n            <Text>\n                {`${new Date(props.activity.start_date).toLocaleDateString()}`}\n            </Text>\n            <Pressable\n                onPress={() => Linking.openURL(`https://www.strava.com/activities/${props.activity.id}`)}\n            >\n                <Text\n                    style={{color: \"blue\", textDecorationColor: \"blue\", textDecorationLine: \"underline\"}}\n                >\n                    View on Strava\n                </Text>\n            </Pressable>\n            {expanded && distanceMeasure !== '0' && timeMeasure !== '0' ?\n                <View style={{width: \"100%\"}}>\n                    <View style={styles.separator}/>\n                    <DrawDistance></DrawDistance>\n                </View> :\n                null\n            }\n        </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        marginHorizontal: 16,\n        marginTop: 16,\n        alignItems: \"center\",\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2,\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modal: {\n        width: \"90%\",\n        marginLeft: \"5%\",\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n        elevation: 5,\n    },\n    modalLine: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n    },\n    separator: {\n        height: 2,\n        backgroundColor: 'black',\n        marginTop: 8,\n        marginBottom: 8\n    },\n    name: {\n        fontSize: 24,\n    }\n});","import { useEffect, useState } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    FlatList,\n    ActivityIndicator,\n    Pressable,\n    TextInput,\n    LayoutAnimation\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport Activity from \"./Activity.js\";\n\nexport default function Feed(props) {\n\n    const [activities, setActivities] = useState([]);\n    const [refreshing, setRefreshing] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [page, setPage] = useState(1)\n    const [distanceMeasure, setDistanceMeasure] = useState('1000')\n    const [timeMeasure, setTimeMeasure] = useState('')\n\n    useEffect(() => {\n        if (props.credentials.accessToken !== undefined) {\n            getActivities(false)\n        }\n    }, [props.credentials])\n\n    async function getActivities(refresh) {\n        refresh ?\n            setRefreshing(true) :\n            setLoading(true)\n        fetch(`https://www.strava.com/api/v3/athlete/activities?access_token=${props.credentials.accessToken}&per_page=10&page=${refresh ? 1 : page}`)\n            .then((res) => res.json())\n            .then((data) => {\n                data.forEach((el) => el.isExpanded = false)\n                setActivities(refresh ? data : activities.concat(data))\n                setPage(page + 1)\n            })\n            .catch(error => console.log(error))\n            .finally(() => {\n                setRefreshing(false)\n                setLoading(false)\n            })\n    }\n\n    function renderItem({ item }) {\n        return (\n            <Activity activity={item} distanceMeasure={distanceMeasure} timeMeasure={timeMeasure} credentials={props.credentials}/>\n        )\n    }\n\n    return (\n        <>\n            {(loading && activities.length === 0) ?\n                <ActivityIndicator style={{marginTop: 16}} size='large' color=\"black\"/>:\n                <FlatList\n                    style={{alignSelf: \"center\", width: \"100%\", maxWidth: 700}}\n                    data={activities}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.id}\n                    keyboardDismissMode={'onDrag'}\n                    onRefresh={() => {\n                        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                        getActivities(true)\n                    }}\n                    refreshing={refreshing}\n                    ListHeaderComponent={\n                        <View style={styles.item}>\n                            <View style={{flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                                <Text style={{fontSize: 24}}>Distance [m]</Text>\n                                <TextInput\n                                    style={styles.input}\n                                    contextMenuHidden={true}\n                                    selectionColor='#fc5200'\n                                    inputMode={\"numeric\"}\n                                    onChangeText={text => {\n                                        var number = text.replace(/[^0-9]/g, '')\n                                        isNaN(number) ?\n                                            setDistanceMeasure(0) :\n                                            setTimeMeasure('')\n                                        setDistanceMeasure(number)\n                                    }}\n                                    value={distanceMeasure.toString()}\n                                />\n                            </View>\n                            <View style={{flexDirection: \"row\", justifyContent: \"space-between\", marginTop: 5}}>\n                                <Text style={{fontSize: 24}}>Time [s]</Text>\n                                <TextInput\n                                    style={styles.input}\n                                    contextMenuHidden={true}\n                                    selectionColor='#fc5200'\n                                    inputMode={\"numeric\"}\n                                    onChangeText={text => {\n                                        var number = text.replace(/[^0-9]/g, '')\n                                        isNaN(number) ?\n                                            setTimeMeasure('') :\n                                            setDistanceMeasure('')\n                                        setTimeMeasure(number)\n                                    }}\n                                    value={timeMeasure.toString()}\n                                />\n                            </View>\n                        </View>\n                    }\n                    ListFooterComponent={\n                        <Pressable\n                            style={[styles.item, {marginBottom: 16, alignItems: \"center\"}]}\n                            onPress={() => {\n                                LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                                getActivities(false)\n                            }}\n                        >\n                            {loading ?\n                                <ActivityIndicator style={{marginTop: 19, marginBottom: 19}} color=\"black\"/> :\n                                <View  style={{flexDirection: \"row\", marginTop: 13, marginBottom: 13}}>\n                                    <Ionicons name=\"reload-circle\" size={28} color=\"black\" />\n                                    <Text style={{fontSize: 24}}> Load more</Text>\n                                </View>\n                            }\n                        </Pressable>\n                    }\n                />\n            }\n        </>\n    )\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        marginHorizontal: 16,\n        marginTop: 16,\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 16,\n        elevation: 2,\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n    },\n    input: {\n        backgroundColor: \"white\",\n        width: 100,\n        fontSize: 24,\n        textAlign: \"center\",\n        borderRadius: 10\n    },\n});\n  ","import React, {useState, useEffect} from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Platform,\n    UIManager,\n    Pressable,\n    ActivityIndicator,\n} from 'react-native';\nimport {Image} from 'expo-image';\nimport {SafeAreaProvider, SafeAreaView} from 'react-native-safe-area-context';\nimport {StatusBar} from 'expo-status-bar';\nimport * as WebBrowser from 'expo-web-browser';\nimport {makeRedirectUri, useAuthRequest, exchangeCodeAsync, TokenResponse, refreshAsync} from 'expo-auth-session';\nimport Feed from \"./components/Feed\";\nimport * as SecureStore from 'expo-secure-store';\nimport {AntDesign} from '@expo/vector-icons';\n\nconst pwrdByStravaSmall = require(\"./assets/api_logo_pwrdBy_strava_stack_white.svg\")\nconst connectWithStrava = require(\"./assets/btn_strava_connectwith_orange.svg\")\nconst pwrdByStravaBig = require(\"./assets/api_logo_pwrdBy_strava_stack_light.svg\")\nconst demo = require('./assets/demo.jpg')\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst discovery = {\n    authorizationEndpoint: 'https://www.strava.com/oauth/mobile/authorize',\n    tokenEndpoint: 'https://eou0f5t5ol4avvx.m.pipedream.net',\n    revocationEndpoint: 'https://www.strava.com/oauth/deauthorize',\n};\n\nexport default function App() {\n\n    const [loggedIn, setLoggedIn] = useState(false)\n    const [credentials, setCredentials] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [errorState, setErrorState] = useState('')\n    const [messyOAuthRedirectFromStravaApp, setMessyOAuthRedirectFromStravaApp] = useState(false)\n\n    const setAccessToken = async () => {\n        exchangeCodeAsync(\n            {\n                clientId: request?.clientId,\n                redirectUri: makeRedirectUri({\n                    scheme: 'fastestx',\n                    path: 'FastestX'\n                }),\n                code: response?.params.code,\n            },\n            discovery\n        ).then((data) => {\n            if (Platform.OS !== 'web') {\n                SecureStore.setItemAsync('credentials', JSON.stringify(data))\n            }\n            setCredentials(data)\n            setLoading(false)\n            setLoggedIn(true)\n        }).catch(() => {\n            setErrorState('rate_limit')\n            setLoading(false)\n        })\n    }\n\n    const [request, response, promptAsync] = useAuthRequest(\n        {\n            clientId: '80072',\n            scopes: ['activity:read_all'],\n            redirectUri: makeRedirectUri({\n                scheme: 'fastestx',\n                path: 'FastestX'\n            }),\n        },\n        discovery\n    );\n\n    const handleLogout = async () => {\n        if (Platform.OS !== 'web') {\n            await SecureStore.deleteItemAsync('credentials')\n        }\n\n        await fetch(`https://www.strava.com/oauth/deauthorize?access_token=${credentials.accessToken}`, {\n            method: 'POST',\n        });\n\n        setLoggedIn(false)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        const checkStoredCredentials = async () => {\n            setLoading(true)\n            const isAvailable = async () => await SecureStore.isAvailableAsync('credentials')\n            const getStoredCredentials = async () => await SecureStore.getItemAsync('credentials')\n            const storedCredentials = JSON.parse(await getStoredCredentials())\n\n            if (await isAvailable() && storedCredentials !== null) {\n                if (!TokenResponse.isTokenFresh(storedCredentials)) {\n                    const refreshedCredentials = await refreshAsync(\n                        {clientId: '80072', refreshToken: storedCredentials.refreshToken},\n                        discovery\n                    )\n\n                    setCredentials(refreshedCredentials)\n                    setLoggedIn(true)\n                    setLoading(false)\n                    return\n                }\n                setCredentials(storedCredentials)\n                setLoggedIn(true)\n                setLoading(false)\n            }\n        }\n\n        if (Platform.OS !== \"web\") {\n            checkStoredCredentials()\n        }\n    }, [])\n\n    useEffect(() => {\n        const handleMessyOAuthRedirectFromStravaApp = async () => {\n            setLoading(true)\n            setMessyOAuthRedirectFromStravaApp(true)\n            const params = new URLSearchParams(window.location.search)\n            const paramsObj = {}\n            for (const [key, value] of params) {\n                paramsObj[key] = value\n            }\n            var newURL = location.href.split(\"?\")[0];\n            window.history.pushState('object', document.title, newURL);\n\n            if (paramsObj.code !== undefined && paramsObj.scope !== undefined && paramsObj.state !== undefined) {\n                if (paramsObj.scope === 'read,activity:read_all' || paramsObj.scope === 'activity:read_all,read') {\n                    exchangeCodeAsync(\n                        {\n                            clientId: '80072',\n                            redirectUri: makeRedirectUri({\n                                scheme: 'fastestx',\n                                path: 'FastestX'\n                            }),\n                            code: paramsObj.code,\n                        },\n                        discovery\n                    ).then((data) => {\n                        setCredentials(data)\n                        setLoading(false)\n                        setErrorState('')\n                        setLoggedIn(true)\n                    }).catch(() => {\n                        setErrorState('rate_limit')\n                        setLoading(false)\n                    })\n                } else {\n                    setErrorState('wrong_scope')\n                    setLoading(false)\n                }\n            } else if (paramsObj.error !== undefined) {\n                setErrorState('wrong_scope')\n                setLoading(false)\n            } else {\n                setErrorState('')\n                setLoading(false)\n            }\n        }\n\n        if (Platform.OS === 'web') {\n            handleMessyOAuthRedirectFromStravaApp()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (response?.type === 'success') {\n            if (response?.params.scope === 'read,activity:read_all' || response?.params.scope === 'activity:read_all,read') {\n                setErrorState('')\n                setAccessToken()\n            } else {\n                setErrorState('wrong_scope')\n                setLoading(false)\n            }\n        } else if (response?.type === 'error') {\n            setErrorState('wrong_scope')\n            setLoading(false)\n        } else if (request !== null && !messyOAuthRedirectFromStravaApp) {\n            setErrorState('')\n            setLoading(false)\n        }\n    }, [response])\n\n    useEffect(() => {\n        const test = () => {\n            console.log(\n                {\n                    Platform: Platform,\n                    loggedIn: loggedIn,\n                    credentials: credentials,\n                    loading: loading,\n                    errorState: errorState,\n                    request: request,\n                    response: response,\n                },\n            )\n        }\n\n        test()\n    })\n\n    if (Platform.OS === 'android') {\n        UIManager.setLayoutAnimationEnabledExperimental(true);\n    }\n\n    return (\n        <>\n            <StatusBar backgroundColor=\"#fc5200\"/>\n            <SafeAreaProvider>\n                <SafeAreaView style={{flex: 1}}>\n                    <View style={[styles.topBar, {flexDirection: \"row\", justifyContent: \"center\"}]}>\n                        <View style={{\n                            alignItems: \"center\",\n                            flexDirection: \"row\",\n                            width: \"100%\",\n                            maxWidth: 700,\n                            justifyContent: \"space-between\"\n                        }}>\n                            <Text style={styles.title}>FastestX</Text>\n                            {loggedIn && !errorState &&\n                                <>\n                                    <Image\n                                        style={{height: 43, width: 104}}\n                                        contentFit=\"contain\"\n                                        source={pwrdByStravaSmall}\n                                    />\n                                    <Pressable\n                                        onPress={() => {\n                                            setLoading(true)\n                                            handleLogout()\n                                        }}\n                                        style={{marginRight: 16, justifyContent: 'center'}}\n                                    >\n                                        <AntDesign\n                                            name=\"logout\"\n                                            size={24}\n                                            color=\"black\"\n                                        />\n                                    </Pressable>\n                                </>\n                            }\n                        </View>\n                    </View>\n                    {\n                        loading ?\n                            <View style={{marginTop: 16, justifyContent: \"space-between\", flex: 1}}>\n                                <ActivityIndicator size='large' color=\"black\"/>\n                                <Image\n                                    style={{\n                                        width: \"100%\",\n                                        height: 63,\n                                        marginTop: 16\n                                    }}\n                                    contentFit=\"contain\"\n                                    source={pwrdByStravaBig}\n                                />\n                            </View> :\n                            loggedIn && !errorState ?\n                                <Feed credentials={credentials}></Feed> :\n                                <View style={{\n                                    flex: 1,\n                                    justifyContent: \"space-between\",\n                                    alignSelf: \"stretch\",\n                                    justifySelf: \"stretch\"\n                                }}>\n                                    <View>\n                                        {errorState === 'wrong_scope' ?\n                                            <Text\n                                                style={{\n                                                    width: \"90%\",\n                                                    marginLeft: \"5%\",\n                                                    marginTop: 16,\n                                                    color: 'red',\n                                                    textAlign: \"center\"\n                                                }}\n                                            >\n                                                FastestX needs the permission to read all of your activities' data to\n                                                work.\n                                            </Text> : <></>}\n                                        {errorState === 'rate_limit' ?\n                                            <Text\n                                                style={{\n                                                    width: \"90%\",\n                                                    marginLeft: \"5%\",\n                                                    marginTop: 16,\n                                                    color: 'red',\n                                                    textAlign: \"center\"\n                                                }}\n                                            >\n                                                FastestX reached it's usage limit. It will work again tomorrow.\n                                            </Text> : <></>}\n                                        <Pressable\n                                            style={{marginTop: 16}}\n                                            onPress={() => {\n                                                setLoading(true)\n                                                promptAsync()\n                                            }}\n                                        >\n                                            <Image\n                                                style={{height: 48}}\n                                                contentFit=\"contain\"\n                                                source={connectWithStrava}\n                                            />\n                                        </Pressable>\n                                        <View style={{marginTop: 16}}>\n                                            <Text style={{textAlign: \"center\"}}>Log in to see your activities</Text>\n                                        </View>\n                                        <Image\n                                            style={{height: 500, marginTop: 16}}\n                                            contentFit=\"contain\"\n                                            source={demo}\n                                        />\n                                    </View>\n                                    {(!loggedIn || errorState) &&\n                                        <Image\n                                            style={{\n                                                width: \"100%\",\n                                                height: 63\n                                            }}\n                                            contentFit=\"contain\"\n                                            source={pwrdByStravaBig}\n                                        />}\n                                </View>\n                    }\n                </SafeAreaView>\n            </SafeAreaProvider>\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\"\n    },\n    topBar: {\n        height: 43,\n        backgroundColor: \"#fc5200\",\n    },\n    title: {\n        paddingLeft: 16,\n        fontSize: 32,\n    },\n    item: {\n        marginHorizontal: 16,\n        marginTop: 16,\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 16,\n        elevation: 2,\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n    },\n    input: {\n        backgroundColor: \"white\",\n        width: 100,\n        fontSize: 24,\n        textAlign: \"center\",\n        borderRadius: 10\n    },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/FastestX/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [25], () => (__webpack_require__(605)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [25], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ActivityMap","props","center","polygonCenter","positions","latlng","EPSG3857","mapShapes","shapeType","color","id","map","el","lat","lng","fastestLatlng","initialPosition","_jsxs","_Fragment","children","_jsx","rel","href","Pressable","onPressOut","e","console","log","style","width","height","ExpoLeaflet","loadingIndicator","ActivityIndicator","onMessage","mapCenterPosition","mapLayers","attribution","baseLayerIsChecked","baseLayerName","layerType","url","mapOptions","zoomControl","Activity","useEffect","LayoutAnimation","configureNext","Presets","easeInEaseOut","setExpanded","setFastestDistance","setDistanceMeasure","distanceMeasure","setTimeMeasure","timeMeasure","setLoading","setPositions","_useState","useState","_useState2","_slicedToArray","fastestDistance","_useState3","_useState4","loading","_useState5","_useState6","expanded","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_findFastestDistance","_asyncToGenerator","trivial_winner","start","distance","time","end","heartrate","elevation","gain","loss","range","_streams$altitude2","_streams$distance2","_streams$time2","_streams$heartrate2","_streams$latlng2","streams","getStreams","activity","altitudeStream","altitude","data","distanceStream","timeStream","heartrateStream","latlngStream","_objectSpread","fastestSegment","total_elevation_gain","Math","round","reduce","acc","curr","arr","total_elevation_loss","elapsed_time","undefined","timeStreamUpperLimit","slice","_loop2","_i","j","indexOf","i","find","currentSegment","pace","timeInHoursAndMinutes","length","relevantAltitudeStream","fastestLatLng","_streams$altitude","_streams$distance","_streams$time","_streams$heartrate","_streams$latlng","distanceStreamUpperLimit","_loop","apply","arguments","hours","floor","rest","minutes","_x","_getStreams","fetch","credentials","accessToken","then","res","json","styles","item","onPressIn","findFastestDistance","Text","name","textAlign","Date","start_date","toLocaleDateString","onPress","Linking","openURL","textDecorationColor","textDecorationLine","View","separator","modalContainer","modalLine","justifyContent","isNaN","Ionicons","alignSelf","size","MaterialCommunityIcons","average_speed","display","fontSize","fontWeight","average_heartrate","replace","flex","marginRight","alignItems","marginLeft","marginTop","FontAwesome5","StyleSheet","create","marginHorizontal","backgroundColor","borderRadius","padding","boxShadowColor","boxShadowOffset","boxShadowOpacity","boxShadowRadius","modal","flexDirection","marginBottom","Feed","activities","setActivities","refreshing","setRefreshing","page","setPage","getActivities","_getActivities","refresh","forEach","isExpanded","concat","catch","error","finally","FlatList","maxWidth","renderItem","_ref","keyExtractor","keyboardDismissMode","onRefresh","ListHeaderComponent","TextInput","input","contextMenuHidden","selectionColor","inputMode","onChangeText","text","number","value","toString","ListFooterComponent","pwrdByStravaSmall","require","connectWithStrava","pwrdByStravaBig","demo","WebBrowser","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","revocationEndpoint","App","loggedIn","setLoggedIn","setCredentials","errorState","setErrorState","messyOAuthRedirectFromStravaApp","setMessyOAuthRedirectFromStravaApp","setAccessToken","exchangeCodeAsync","clientId","request","redirectUri","makeRedirectUri","scheme","path","code","response","params","Platform","OS","SecureStore","setItemAsync","JSON","stringify","_useAuthRequest","useAuthRequest","scopes","_useAuthRequest2","promptAsync","handleLogout","_ref2","deleteItemAsync","method","checkStoredCredentials","_ref3","isAvailable","_ref4","isAvailableAsync","getStoredCredentials","_ref5","getItemAsync","storedCredentials","parse","TokenResponse","isTokenFresh","refreshedCredentials","refreshAsync","refreshToken","handleMessyOAuthRedirectFromStravaApp","_ref6","URLSearchParams","window","location","search","paramsObj","_ref7","_ref8","key","newURL","split","history","pushState","document","title","scope","state","type","UIManager","setLayoutAnimationEnabledExperimental","StatusBar","SafeAreaProvider","SafeAreaView","topBar","Image","contentFit","source","AntDesign","justifySelf","container","paddingLeft","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}