{"version":3,"file":"static/js/main.31db6229.js","mappings":"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","sources":["components/ActivityMap.js","components/Activity.js","components/Feed.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {ExpoLeaflet} from 'expo-leaflet'\nimport {polygonCenter} from \"leaflet/src/geometry/PolyUtil\";\nimport {EPSG3857} from \"leaflet/src/geo/crs/CRS.EPSG3857\";\nimport {ActivityIndicator, Pressable} from 'react-native'\nimport \"leaflet/dist/leaflet.css\"\n\nexport const ActivityMap = (props) => {\n\n    const center = polygonCenter(props.positions.fastestLatlng.length > 0 ? props.positions.fastestLatlng : props.positions.latlng, EPSG3857)\n\n    const mapLayers = [{\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        baseLayerIsChecked: true,\n        baseLayerName: 'OpenStreetMap',\n        layerType: 'TileLayer',\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    }]\n\n    const mapShapes = [\n        {\n            shapeType: 'polyline',\n            color: \"#123123\",\n            id: \"1\",\n            positions: props.positions.latlng.map(el => ({lat: el[0], lng: el[1]}))\n        }\n    ]\n\n    if (props.positions.fastestLatlng.length > 0) {\n        mapShapes.push({\n            shapeType: 'polyline',\n            color: \"#fc5200\",\n            id: \"2\",\n            positions: props.positions.fastestLatlng.map(el => ({lat: el[0], lng: el[1]}))\n        })\n    }\n\n    const mapOptions = {\n        zoomControl: false,\n    }\n\n    const initialPosition = {\n        lat: center.lat,\n        lng: center.lng,\n    }\n\n    return (\n        <>\n            <Pressable style={{width: \"100%\", height: \"260px\"}}>\n                <ExpoLeaflet\n                    loadingIndicator={() => <ActivityIndicator/>}\n                    onMessage={() => {}}\n                    mapCenterPosition={initialPosition}\n                    mapLayers={mapLayers}\n                    mapOptions={mapOptions}\n                    mapShapes={mapShapes}\n                />\n            </Pressable>\n        </>\n    )\n\n}","import React, {useState, useEffect} from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ActivityIndicator,\n    Pressable,\n    LayoutAnimation\n} from \"react-native\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport {FontAwesome5} from '@expo/vector-icons';\nimport {MaterialCommunityIcons} from '@expo/vector-icons';\nimport * as Linking from 'expo-linking';\nimport {ActivityMap} from \"./ActivityMap\";\n\nexport default function Activity(props) {\n\n    useEffect(() => {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n        setExpanded(false)\n        setFastestDistance(undefined)\n        setDistanceMeasure(props.distanceMeasure)\n        setTimeMeasure(props.timeMeasure)\n        setLoading(false)\n        setPositions({latlng: [], fastestLatlng: []})\n    }, [props.distanceMeasure, props.timeMeasure])\n\n    const [fastestDistance, setFastestDistance] = useState(undefined)\n    const [loading, setLoading] = useState(false)\n    const [expanded, setExpanded] = useState(false)\n    const [distanceMeasure, setDistanceMeasure] = useState('1000')\n    const [timeMeasure, setTimeMeasure] = useState('')\n    const [positions, setPositions] = useState({latlng: [], fastestLatlng: []})\n\n    async function findFastestDistance() {\n        const trivial_winner = {\n            start: {distance: 0, time: 0},\n            end: {distance: 0, time: 0},\n            distance: 0,\n            time: 999999999999999,\n            heartrate: 0,\n            elevation: {gain: 0, loss: 0},\n            range: {start: 0, end: 0}\n        }\n\n        if (distanceMeasure === '0' || timeMeasure === '0' || (distanceMeasure === '' && timeMeasure === '')) {\n            setLoading(true)\n            const streams = await getStreams(props.activity.id)\n            const altitudeStream = streams.altitude?.data\n            const latlngStream = streams.latlng?.data\n\n            if (latlngStream?.length > 0) {\n                setPositions({latlng: latlngStream, fastestLatlng: []})\n            }\n            props.activity.total_elevation_loss = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n\n            setFastestDistance(trivial_winner)\n            setLoading(false)\n        } else if (!fastestDistance && distanceMeasure !== '0' && distanceMeasure !== '' && loading === false) {\n            setLoading(true)\n            const streams = await getStreams(props.activity.id)\n            const altitudeStream = streams.altitude?.data\n            const distanceStream = streams.distance?.data\n            const timeStream = streams.time?.data\n            const heartrateStream = streams.heartrate?.data\n            const latlngStream = streams.latlng?.data\n\n            let fastestSegment = trivial_winner\n\n            props.activity.total_elevation_gain = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0))\n            props.activity.total_elevation_loss = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n\n            if (distanceMeasure >= props.activity.distance) {\n                setFastestDistance(undefined)\n                setPositions({latlng: latlngStream, fastestLatlng: []})\n                setLoading(false)\n                return\n            }\n\n            if (distanceStream && timeStream) {\n                const distanceStreamUpperLimit = distanceStream.slice(-1) - distanceMeasure\n\n                for (let i = 0; distanceStream[i] < distanceStreamUpperLimit; i++) {\n                    const j = distanceStream.indexOf(distanceStream.slice(i).find(el => el - distanceStream[i] >= distanceMeasure))\n                    if (j !== -1) {\n                        const currentSegment = {\n                            distance: Math.round((distanceStream[j] - distanceStream[i]) * 10) / 10,\n                            time: timeStream[j] - timeStream[i],\n                            range: {start: i, end: j}\n                        }\n\n                        if (currentSegment.time < fastestSegment.time || (currentSegment.time === fastestSegment.time && currentSegment.distance > fastestSegment.distance)) {\n                            fastestSegment = currentSegment\n                        }\n                    }\n                }\n\n                if (fastestSegment) {\n                    fastestSegment.start = {\n                        distance: distanceStream[fastestSegment.range.start],\n                        time: timeStream[fastestSegment.range.start]\n                    }\n                    fastestSegment.end = {\n                        distance: distanceStream[fastestSegment.range.end],\n                        time: timeStream[fastestSegment.range.end]\n                    }\n                    fastestSegment.pace = timeInHoursAndMinutes(Math.round((1000 / (distanceStream[fastestSegment.range.end] - distanceStream[fastestSegment.range.start])) * (timeStream[fastestSegment.range.end] - timeStream[fastestSegment.range.start])))\n                    fastestSegment.heartrate = Math.round(heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).reduce((acc, curr) => acc + curr, 0) / heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).length)\n\n                    const relevantAltitudeStream = altitudeStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    fastestSegment.elevation = {\n                        gain: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0)),\n                        loss: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n                    }\n                }\n\n                if (latlngStream?.length > 0) {\n                    let fastestLatlng = []\n                    if (fastestSegment) {\n                        fastestLatlng = latlngStream.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    }\n                    setPositions({latlng: latlngStream, fastestLatlng: fastestLatlng})\n                }\n\n                setLoading(false)\n                LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                setFastestDistance(fastestSegment === trivial_winner ? undefined : fastestSegment)\n            } else {\n                setFastestDistance(undefined)\n            }\n        } else if (!fastestDistance && timeMeasure !== '0' && timeMeasure !== '' && loading === false) {\n            setLoading(true)\n            const streams = await getStreams(props.activity.id)\n            const altitudeStream = streams.altitude?.data\n            const distanceStream = streams.distance?.data\n            const timeStream = streams.time?.data\n            const heartrateStream = streams.heartrate?.data\n            const latlngStream = streams.latlng?.data\n\n            if (latlngStream) {\n                setPositions({...positions, latlng: latlngStream})\n            }\n\n            let fastestSegment = trivial_winner\n\n            props.activity.total_elevation_gain = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0))\n            props.activity.total_elevation_loss = Math.round(altitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n\n            if (timeMeasure >= props.activity.elapsed_time) {\n                setFastestDistance(undefined)\n                setPositions({latlng: latlngStream, fastestLatlng: []})\n                setLoading(false)\n                return\n            }\n\n            if (distanceStream && timeStream) {\n                const timeStreamUpperLimit = timeStream.slice(-1) - timeMeasure\n\n                for (let i = 0; timeStream[i] < timeStreamUpperLimit; i++) {\n                    const j = timeStream.indexOf(timeStream.slice(i).find(el => el - timeStream[i] >= timeMeasure))\n                    if (j !== -1) {\n                        const currentSegment = {\n                            distance: Math.round((distanceStream[j] - distanceStream[i]) * 10) / 10,\n                            time: timeStream[j] - timeStream[i],\n                            range: {start: i, end: j}\n                        }\n\n                        if (currentSegment.time < fastestSegment.time || (currentSegment.time === fastestSegment.time && currentSegment.distance > fastestSegment.distance)) {\n                            fastestSegment = currentSegment\n                        }\n                    }\n                }\n\n                if (fastestSegment) {\n                    fastestSegment.start = {\n                        distance: distanceStream[fastestSegment.range.start],\n                        time: timeStream[fastestSegment.range.start]\n                    }\n                    fastestSegment.end = {\n                        distance: distanceStream[fastestSegment.range.end],\n                        time: timeStream[fastestSegment.range.end]\n                    }\n                    fastestSegment.pace = timeInHoursAndMinutes(Math.round((1000 / (distanceStream[fastestSegment.range.end] - distanceStream[fastestSegment.range.start])) * (timeStream[fastestSegment.range.end] - timeStream[fastestSegment.range.start])))\n                    fastestSegment.heartrate = Math.round(heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).reduce((acc, curr) => acc + curr, 0) / heartrateStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1).length)\n\n                    const relevantAltitudeStream = altitudeStream?.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    fastestSegment.elevation = {\n                        gain: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr > arr[id - 1] ? acc + curr - arr[id - 1] : acc + 0, 0)),\n                        loss: Math.round(relevantAltitudeStream?.reduce((acc, curr, id, arr) => curr < arr[id - 1] ? acc + arr[id - 1] - curr : acc + 0, 0))\n                    }\n                }\n\n                if (latlngStream?.length > 0) {\n                    let fastestLatlng = []\n                    if (fastestSegment) {\n                        fastestLatlng = latlngStream.slice(fastestSegment.range.start, fastestSegment.range.end + 1)\n                    }\n                    setPositions({latlng: latlngStream, fastestLatlng: fastestLatlng})\n                }\n\n                setLoading(false)\n                LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                setFastestDistance(fastestSegment === trivial_winner ? undefined : fastestSegment)\n            } else {\n                setFastestDistance(undefined)\n            }\n        }\n    }\n\n    function timeInHoursAndMinutes(time) {\n        const hours = Math.floor(time / 3600)\n        let rest = time - hours * 3600\n        const minutes = Math.floor(rest / 60)\n        rest = time - minutes * 60 - hours * 3600\n        const seconds = rest < 10 ? `0${rest}` : rest\n        return `${hours !== 0 ? `${hours}:` < 10 ? `0${hours}:` : `${hours}:` : ''}${minutes < 10 ? `0${minutes}` : minutes}:${seconds} ${hours > 0 ? 'h' : 'min'}`\n    }\n\n    const updateLayout = () => {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n        setExpanded(!expanded)\n    };\n\n    async function getStreams(id) {\n        return fetch(`https://www.strava.com/api/v3/activities/${id}/streams?access_token=${props.credentials.accessToken}&keys=time,distance,heartrate,altitude,latlng&key_by_type=true`)\n            .then((res) => res.json())\n    }\n\n    function DrawDistance() {\n        if (fastestDistance === undefined || distanceMeasure === '0' || timeMeasure === '0' || (distanceMeasure === '' && timeMeasure === '') && !loading) {\n            return (\n                <View style={styles.modalContainer}>\n                    <View\n                        style={[styles.modalLine, {justifyContent: \"space-evenly\"}]}\n                    >\n                        <View>\n                            {!isNaN(props.activity.elapsed_time) && props.activity.elapsed_time !== 0 &&\n                                <Ionicons\n                                    style={{textAlign: \"center\", alignSelf: \"center\"}}\n                                    name=\"timer\"\n                                    size={28}\n                                />\n                            }\n                            {!isNaN(props.activity.distance) && props.activity.distance !== 0 &&\n                                <MaterialCommunityIcons\n                                    style={{textAlign: \"center\", alignSelf: \"center\"}}\n                                    name=\"map-marker-distance\"\n                                    size={28}\n                                />\n                            }\n                            {!isNaN(props.activity.average_speed) && props.activity.average_speed !== 0 &&\n                                <>\n                                    <Text\n                                        style={{\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                            alignSelf: \"center\",\n                                            fontSize: 22,\n                                            fontWeight: 'bold'\n                                        }}\n                                    >\n                                        [min/km]\n                                    </Text>\n                                    <Text\n                                        style={{\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                            alignSelf: \"center\",\n                                            fontSize: 22,\n                                            fontWeight: 'bold'\n                                        }}\n                                    >\n                                        [km/h]\n                                    </Text>\n                                </>\n                            }\n                            {!isNaN(props.activity.average_heartrate) && props.activity.average_heartrate !== 0 &&\n                                <Text\n                                    style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        alignSelf: \"center\",\n                                        fontSize: 22,\n                                        fontWeight: 'bold'\n                                    }}\n                                >\n                                    [bpm]\n                                </Text>\n                            }\n                            {!isNaN(props.activity.total_elevation_gain) && props.activity.total_elevation_gain !== 0 &&\n                                <Text\n                                    style={{\n                                        display: \"flex\",\n                                        textAlign: \"center\",\n                                        alignSelf: \"center\",\n                                        fontSize: 22,\n                                        fontWeight: 'bold'\n                                    }}\n                                >\n                                    [m]\n                                </Text>\n                            }\n                        </View>\n                        <View>\n                            {!isNaN(props.activity.elapsed_time) && props.activity.elapsed_time !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`${timeInHoursAndMinutes(props.activity.elapsed_time)}`}\n                                </Text>\n                            }\n                            {!isNaN(props.activity.distance) && props.activity.distance !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`${Math.round(props.activity.distance / 10) / 100} km`}\n                                </Text>\n                            }\n                            {!isNaN(props.activity.average_speed) && props.activity.average_speed !== 0 &&\n                                <>\n                                    <Text\n                                        style={[\n                                            styles.name,\n                                            {textAlign: \"center\"}\n                                        ]}\n                                    >\n                                        {`${timeInHoursAndMinutes(Math.round(1000 / props.activity.average_speed)).replace(' min', '').replace(' h', '')}`}\n                                    </Text>\n                                    <Text\n                                        style={[\n                                            styles.name,\n                                            {textAlign: \"center\"}\n                                        ]}\n                                    >\n                                        {`${Math.round(props.activity.average_speed * 3.6 * 10) / 10}`}\n                                    </Text>\n                                </>\n                            }\n                            {!isNaN(props.activity.average_heartrate) && props.activity.average_heartrate !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`${Math.round(props.activity.average_heartrate)}`}\n                                </Text>\n                            }\n                            {!isNaN(props.activity.total_elevation_gain) && props.activity.total_elevation_gain !== 0 &&\n                                <Text\n                                    style={[\n                                        styles.name,\n                                        {textAlign: \"center\"}\n                                    ]}\n                                >\n                                    {`+${props.activity.total_elevation_gain} / -${props.activity.total_elevation_loss}`}\n                                </Text>\n                            }\n                        </View>\n                    </View>\n\n                    {positions.latlng?.length > 0 ?\n                        <>\n                            <View style={{width: \"100%\"}}>\n                                <View style={styles.separator}/>\n                            </View>\n                            <ActivityMap positions={positions}></ActivityMap>\n                        </> : <></>\n                    }\n                </View>\n            )\n        } else if (fastestDistance) {\n            return (\n                <View style={styles.modalContainer}>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${fastestDistance.distance} m`}\n                        </Text>\n                        <MaterialCommunityIcons\n                            style={{display: \"flex\", alignItems: \"center\"}}\n                            name=\"map-marker-distance\"\n                            size={28}\n                        />\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round(props.activity.distance / 10) / 100} km`}\n                        </Text>\n                    </View>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(fastestDistance.time)}`}\n                        </Text>\n                        <Ionicons\n                            style={{display: \"flex\", alignItems: \"center\"}}\n                            name=\"timer\"\n                            size={28}\n                        />\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(props.activity.elapsed_time)}`}\n                        </Text>\n                    </View>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${fastestDistance.pace.replace(' min', '').replace(' h', '')}`}\n                        </Text>\n                        <Text\n                            style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                        >\n                            [min/km]\n                        </Text>\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(Math.round(1000 / props.activity.average_speed)).replace(' min', '').replace(' h', '')}`}\n                        </Text>\n                    </View>\n                    <View style={[styles.modalLine, {display: \"flex\"}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round((fastestDistance.end.distance - fastestDistance.start.distance) / (fastestDistance.end.time - fastestDistance.start.time) * 3.6 * 10) / 10}`}\n                        </Text>\n                        <Text\n                            style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                        >\n                            [km/h]\n                        </Text>\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round(props.activity.average_speed * 3.6 * 10) / 10}`}\n                        </Text>\n                    </View>\n                    {!isNaN(fastestDistance.heartrate) &&\n                        <View style={[styles.modalLine, {display: \"flex\"}]}>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {flex: 1, marginRight: \"auto\"}\n                                ]}\n                            >\n                                {`${fastestDistance.heartrate}`}\n                            </Text>\n                            <Text\n                                style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                            >\n                                [bpm]\n                            </Text>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                                ]}\n                            >\n                                {`${Math.round(props.activity.average_heartrate)}`}\n                            </Text>\n                        </View>\n                    }\n                    {!isNaN(fastestDistance.elevation.gain) && !isNaN(fastestDistance.elevation.loss) &&\n                        <View style={[styles.modalLine, {display: \"flex\"}]}>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {flex: 1, marginRight: \"auto\"}\n                                ]}\n                            >\n                                {`+${fastestDistance.elevation.gain} / -${fastestDistance.elevation.loss}`}\n                            </Text>\n                            <Text\n                                style={{display: \"flex\", alignItems: \"center\", fontSize: 22, fontWeight: 'bold'}}\n                            >\n                                [m]\n                            </Text>\n                            <Text\n                                style={[\n                                    styles.name,\n                                    {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                                ]}\n                            >\n                                {`+${props.activity.total_elevation_gain} / -${props.activity.total_elevation_loss}`}\n                            </Text>\n                        </View>\n                    }\n\n                    <View style={{width: \"100%\"}}>\n                        <View style={styles.separator}/>\n                    </View>\n\n                    {positions.latlng?.length > 0 ? <ActivityMap positions={positions}></ActivityMap> : <></>}\n\n                    <View style={[styles.modalLine, {display: \"flex\", marginTop: positions.latlng?.length > 0 ? 8 : 0}]}>\n                        <Text\n                            style={[\n                                styles.name,\n                                {flex: 1, marginRight: \"auto\"}\n                            ]}\n                        >\n                            {`${Math.round(fastestDistance.start.distance) / 1000} km`}\n                        </Text>\n                        <FontAwesome5\n                            style={{display: \"flex\", alignItems: \"center\"}}\n                            name=\"at\"\n                            size={24}\n                        />\n                        <Text\n                            style={[\n                                styles.name,\n                                {textAlign: \"right\", flex: 1, marginLeft: \"auto\"}\n                            ]}\n                        >\n                            {`${timeInHoursAndMinutes(fastestDistance.start.time)}`}\n                        </Text>\n                    </View>\n                </View>\n            )\n        } else if (loading) {\n            return (\n                <ActivityIndicator color=\"black\"/>\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <Pressable\n            style={styles.item}\n            onPress={() => {\n                findFastestDistance(props.activity)\n                updateLayout()\n            }}>\n            <Text style={[styles.name, {textAlign: \"center\"}]}>\n                {`${props.activity.name}`}\n            </Text>\n            <Text>\n                {`${new Date(props.activity.start_date).toLocaleDateString()}`}\n            </Text>\n            <Pressable\n                onPress={() => Linking.openURL(`https://www.strava.com/activities/${props.activity.id}`)}\n            >\n                <Text\n                    style={{color: \"blue\", textDecorationColor: \"blue\", textDecorationLine: \"underline\"}}\n                >\n                    View on Strava\n                </Text>\n            </Pressable>\n            {expanded ?\n                <View style={{width: \"100%\"}}>\n                    <View style={styles.separator}/>\n                    {loading ? <ActivityIndicator color=\"black\"/> : <DrawDistance></DrawDistance>}\n                </View> :\n                null\n            }\n        </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        marginHorizontal: 16,\n        marginTop: 16,\n        alignItems: \"center\",\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2,\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n    },\n    modalContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    modal: {\n        width: \"90%\",\n        marginLeft: \"5%\",\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n        elevation: 5,\n    },\n    modalLine: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\"\n    },\n    separator: {\n        height: 2,\n        backgroundColor: 'black',\n        marginTop: 8,\n        marginBottom: 8\n    },\n    name: {\n        fontSize: 24,\n    }\n});","import { useEffect, useState } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    FlatList,\n    ActivityIndicator,\n    Pressable,\n    TextInput,\n    LayoutAnimation\n} from 'react-native';\nimport {Ionicons} from '@expo/vector-icons';\nimport Activity from \"./Activity.js\";\n\nexport default function Feed(props) {\n\n    const [activities, setActivities] = useState([]);\n    const [refreshing, setRefreshing] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [page, setPage] = useState(1)\n    const [distanceMeasure, setDistanceMeasure] = useState('1000')\n    const [timeMeasure, setTimeMeasure] = useState('')\n\n    useEffect(() => {\n        if (props.credentials.accessToken !== undefined) {\n            getActivities(false)\n        }\n    }, [props.credentials])\n\n    async function getActivities(refresh) {\n        refresh ?\n            setRefreshing(true) :\n            setLoading(true)\n        fetch(`https://www.strava.com/api/v3/athlete/activities?access_token=${props.credentials.accessToken}&per_page=10&page=${refresh ? 1 : page}`)\n            .then((res) => res.json())\n            .then((data) => {\n                data.forEach((el) => el.isExpanded = false)\n                setActivities(refresh ? data : activities.concat(data))\n                setPage(page + 1)\n            })\n            .catch(error => console.log(error))\n            .finally(() => {\n                setRefreshing(false)\n                setLoading(false)\n            })\n    }\n\n    const renderItem = ({item}) => {\n        return (\n            <Activity activity={item} distanceMeasure={distanceMeasure} timeMeasure={timeMeasure} credentials={props.credentials}/>\n        )\n    }\n\n    return (\n        <>\n            {(loading && activities.length === 0) ?\n                <ActivityIndicator style={{marginTop: 16}} size='large' color=\"black\"/>:\n                <FlatList\n                    style={{alignSelf: \"center\", width: \"100%\", maxWidth: 700}}\n                    data={activities}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.id}\n                    keyboardDismissMode={'onDrag'}\n                    onRefresh={() => {\n                        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                        getActivities(true)\n                    }}\n                    refreshing={refreshing}\n                    ListHeaderComponent={\n                        <View style={styles.item}>\n                            <View style={{flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                                <Text style={{fontSize: 24}}>Distance [m]</Text>\n                                <TextInput\n                                    style={styles.input}\n                                    contextMenuHidden={true}\n                                    selectionColor='#fc5200'\n                                    inputMode={\"numeric\"}\n                                    onChangeText={text => {\n                                        var number = text.replace(/[^0-9]/g, '')\n                                        if (isNaN(parseInt(number))) {\n                                            setTimeMeasure('')\n                                            setDistanceMeasure('0')\n                                        } else {\n                                            setTimeMeasure('')\n                                            setDistanceMeasure(parseInt(number).toString())\n                                        }\n                                    }}\n                                    value={distanceMeasure.toString()}\n                                />\n                            </View>\n                            <View style={{flexDirection: \"row\", justifyContent: \"space-between\", marginTop: 5}}>\n                                <Text style={{fontSize: 24}}>Time [s]</Text>\n                                <TextInput\n                                    style={styles.input}\n                                    contextMenuHidden={true}\n                                    selectionColor='#fc5200'\n                                    inputMode={\"numeric\"}\n                                    onChangeText={text => {\n                                        var number = text.replace(/[^0-9]/g, '')\n                                        if (isNaN(parseInt(number))) {\n                                            setDistanceMeasure('')\n                                            setTimeMeasure('0')\n                                        } else {\n                                            setDistanceMeasure('')\n                                            setTimeMeasure(parseInt(number).toString())\n                                        }\n                                    }}\n                                    value={timeMeasure.toString()}\n                                />\n                            </View>\n                        </View>\n                    }\n                    ListFooterComponent={\n                        <Pressable\n                            style={[styles.item, {marginBottom: 16, alignItems: \"center\"}]}\n                            onPress={() => {\n                                LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n                                getActivities(false)\n                            }}\n                        >\n                            {loading ?\n                                <ActivityIndicator style={{marginTop: 14, marginBottom: 14}} color=\"black\"/> :\n                                <View style={{flexDirection: \"row\", marginTop: 8, marginBottom: 8}}>\n                                    <Ionicons name=\"reload-circle\" size={28} color=\"black\"/>\n                                    <Text style={{fontSize: 24}}> Load more</Text>\n                                </View>\n                            }\n                        </Pressable>\n                    }\n                />\n            }\n        </>\n    )\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        marginHorizontal: 16,\n        marginTop: 16,\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 16,\n        elevation: 2,\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n    },\n    input: {\n        backgroundColor: \"white\",\n        width: 100,\n        fontSize: 24,\n        textAlign: \"center\",\n        borderRadius: 10\n    },\n});\n  ","import React, {useState, useEffect} from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Platform,\n    UIManager,\n    Pressable,\n    ActivityIndicator,\n} from 'react-native';\nimport {Image} from 'expo-image';\nimport {SafeAreaProvider, SafeAreaView} from 'react-native-safe-area-context';\nimport {StatusBar} from 'expo-status-bar';\nimport * as WebBrowser from 'expo-web-browser';\nimport {makeRedirectUri, useAuthRequest, exchangeCodeAsync, TokenResponse, refreshAsync} from 'expo-auth-session';\nimport Feed from \"./components/Feed\";\nimport {AntDesign} from '@expo/vector-icons';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst pwrdByStravaSmall = require(\"./assets/api_logo_pwrdBy_strava_stack_white.svg\")\nconst connectWithStrava = require(\"./assets/btn_strava_connectwith_orange.svg\")\nconst pwrdByStravaBig = require(\"./assets/api_logo_pwrdBy_strava_stack_light.svg\")\nconst demo = require('./assets/demo.jpg')\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst discovery = {\n    authorizationEndpoint: 'https://www.strava.com/oauth/mobile/authorize',\n    tokenEndpoint: 'https://eou0f5t5ol4avvx.m.pipedream.net',\n    revocationEndpoint: 'https://www.strava.com/oauth/deauthorize',\n};\n\nexport default function App() {\n\n    const [loggedIn, setLoggedIn] = useState(false)\n    const [credentials, setCredentials] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [errorState, setErrorState] = useState('')\n    const [messyOAuthRedirectFromStravaApp, setMessyOAuthRedirectFromStravaApp] = useState(false)\n\n    const setAccessToken = async () => {\n        exchangeCodeAsync(\n            {\n                clientId: request?.clientId,\n                redirectUri: makeRedirectUri({\n                    scheme: 'fastestx',\n                    path: 'FastestX'\n                }),\n                code: response?.params.code,\n            },\n            discovery\n        ).then((data) => {\n            setCredentials(data)\n            AsyncStorage.setItem(\"strava_credentials\", JSON.stringify(data))\n            setLoading(false)\n            setLoggedIn(true)\n        }).catch(() => {\n            setErrorState('rate_limit')\n            setLoading(false)\n        })\n    }\n\n    const [request, response, promptAsync] = useAuthRequest(\n        {\n            clientId: '80072',\n            scopes: ['activity:read_all'],\n            redirectUri: makeRedirectUri({\n                scheme: 'fastestx',\n                path: 'FastestX'\n            }),\n        },\n        discovery\n    );\n\n    const handleLogout = async () => {\n        await fetch(`https://www.strava.com/oauth/deauthorize?access_token=${credentials.accessToken}`, {\n            method: 'POST',\n        });\n\n        await AsyncStorage.removeItem(\"strava_credentials\");\n        setCredentials({})\n        setLoggedIn(false)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        const checkStoredCredentials = async () => {\n            setLoading(true)\n            const getStoredCredentials = async () => await AsyncStorage.getItem(\"strava_credentials\")\n            const storedCredentials = JSON.parse(await getStoredCredentials())\n\n            if (await storedCredentials !== null) {\n                if (!TokenResponse.isTokenFresh(storedCredentials)) {\n                    const refreshedCredentials = await refreshAsync(\n                        {clientId: '80072', refreshToken: storedCredentials.refreshToken},\n                        discovery\n                    )\n\n                    setCredentials(refreshedCredentials)\n                    await AsyncStorage.setItem(\"strava_credentials\", JSON.stringify(refreshedCredentials))\n                    setLoggedIn(true)\n                    setLoading(false)\n                    return\n                }\n                setCredentials(storedCredentials)\n                setLoggedIn(true)\n                setLoading(false)\n                return\n            }\n            setLoggedIn(false)\n            setLoading(false)\n        }\n\n        checkStoredCredentials()\n    }, [])\n\n    useEffect(() => {\n        const handleChromeMobileOpeningNewTab = async () => {\n            setLoading(true)\n            setMessyOAuthRedirectFromStravaApp(true)\n            const params = new URLSearchParams(window.location.search)\n            const paramsObj = {}\n            for (const [key, value] of params) {\n                paramsObj[key] = value\n            }\n            var newURL = location.href.split(\"?\")[0];\n            window.history.pushState('object', document.title, newURL);\n\n            if (paramsObj.code !== undefined && paramsObj.scope !== undefined && paramsObj.state !== undefined) {\n                if (paramsObj.scope === 'read,activity:read_all' || paramsObj.scope === 'activity:read_all,read') {\n                    exchangeCodeAsync(\n                        {\n                            clientId: '80072',\n                            redirectUri: makeRedirectUri({\n                                scheme: 'fastestx',\n                                path: 'FastestX'\n                            }),\n                            code: paramsObj.code,\n                        },\n                        discovery\n                    ).then((data) => {\n                        setCredentials(data)\n                        AsyncStorage.setItem(\"strava_credentials\", JSON.stringify(data))\n                        setLoading(false)\n                        setErrorState('')\n                        setLoggedIn(true)\n                    }).catch(() => {\n                        setErrorState('rate_limit')\n                        setLoading(false)\n                        setLoggedIn(false)\n                    })\n                } else {\n                    setErrorState('wrong_scope')\n                    setLoading(false)\n                    setLoggedIn(false)\n                }\n            } else if (paramsObj.error !== undefined) {\n                setErrorState('wrong_scope')\n                setLoading(false)\n                setLoggedIn(false)\n            } else {\n                setErrorState('')\n                setLoading(false)\n                setLoggedIn(false)\n            }\n        }\n\n        handleChromeMobileOpeningNewTab()\n    }, [])\n\n    useEffect(() => {\n        if (response?.type === 'success') {\n            if (response?.params.scope === 'read,activity:read_all' || response?.params.scope === 'activity:read_all,read') {\n                setErrorState('')\n                setAccessToken()\n            } else {\n                setErrorState('wrong_scope')\n                setLoading(false)\n            }\n        } else if (response?.type === 'error') {\n            setErrorState('wrong_scope')\n            setLoading(false)\n        } else if (request !== null && !messyOAuthRedirectFromStravaApp) {\n            setErrorState('')\n            setLoading(false)\n        }\n    }, [response])\n\n    useEffect(() => {\n        const test = () => {\n            console.log(\n                {\n                    Platform: Platform,\n                    loggedIn: loggedIn,\n                    credentials: credentials,\n                    loading: loading,\n                    errorState: errorState,\n                    request: request,\n                    response: response,\n                },\n            )\n        }\n\n        test()\n    })\n\n    if (Platform.OS === 'android') {\n        UIManager.setLayoutAnimationEnabledExperimental(true);\n    }\n\n    return (\n        <>\n            <StatusBar backgroundColor=\"#fc5200\"/>\n            <SafeAreaProvider>\n                <SafeAreaView style={{flex: 1}}>\n                    <View style={[styles.topBar, {flexDirection: \"row\", justifyContent: \"center\"}]}>\n                        <View style={{\n                            alignItems: \"center\",\n                            flexDirection: \"row\",\n                            width: \"100%\",\n                            maxWidth: 700,\n                            justifyContent: \"space-between\"\n                        }}>\n                            <Text style={styles.title}>FastestX</Text>\n                            {loggedIn && !errorState &&\n                                <>\n                                    <Image\n                                        style={{height: 43, width: 104}}\n                                        contentFit=\"contain\"\n                                        source={pwrdByStravaSmall}\n                                    />\n                                    <Pressable\n                                        onPress={() => {\n                                            setLoading(true)\n                                            handleLogout()\n                                        }}\n                                        style={{marginRight: 16, justifyContent: 'center'}}\n                                    >\n                                        <AntDesign\n                                            name=\"logout\"\n                                            size={24}\n                                            color=\"black\"\n                                        />\n                                    </Pressable>\n                                </>\n                            }\n                        </View>\n                    </View>\n                    {\n                        loading ?\n                            <View style={{marginTop: 16, justifyContent: \"space-between\", flex: 1}}>\n                                <ActivityIndicator size='large' color=\"black\"/>\n                                <Image\n                                    style={{\n                                        width: \"100%\",\n                                        height: 63,\n                                        marginTop: 16\n                                    }}\n                                    contentFit=\"contain\"\n                                    source={pwrdByStravaBig}\n                                />\n                            </View> :\n                            loggedIn && !errorState ?\n                                <Feed credentials={credentials}></Feed> :\n                                <View style={{\n                                    flex: 1,\n                                    justifyContent: \"space-between\",\n                                    alignSelf: \"stretch\",\n                                    justifySelf: \"stretch\"\n                                }}>\n                                    <View>\n                                        {errorState === 'wrong_scope' ?\n                                            <Text\n                                                style={{\n                                                    width: \"90%\",\n                                                    marginLeft: \"5%\",\n                                                    marginTop: 16,\n                                                    color: 'red',\n                                                    textAlign: \"center\"\n                                                }}\n                                            >\n                                                FastestX needs the permission to read all of your activities' data to\n                                                work.\n                                            </Text> : <></>}\n                                        {errorState === 'rate_limit' ?\n                                            <Text\n                                                style={{\n                                                    width: \"90%\",\n                                                    marginLeft: \"5%\",\n                                                    marginTop: 16,\n                                                    color: 'red',\n                                                    textAlign: \"center\"\n                                                }}\n                                            >\n                                                FastestX reached it's usage limit. It will work again tomorrow.\n                                            </Text> : <></>}\n                                        <Pressable\n                                            style={{marginTop: 16}}\n                                            onPress={() => {\n                                                setLoading(true)\n                                                promptAsync()\n                                            }}\n                                        >\n                                            <Image\n                                                style={{height: 48}}\n                                                contentFit=\"contain\"\n                                                source={connectWithStrava}\n                                            />\n                                        </Pressable>\n                                        <View style={{marginTop: 16}}>\n                                            <Text style={{textAlign: \"center\"}}>Log in to see your activities</Text>\n                                        </View>\n                                        <Image\n                                            style={{height: 500, marginTop: 16}}\n                                            contentFit=\"contain\"\n                                            source={demo}\n                                        />\n                                    </View>\n                                    {(!loggedIn || errorState) &&\n                                        <Image\n                                            style={{\n                                                width: \"100%\",\n                                                height: 63\n                                            }}\n                                            contentFit=\"contain\"\n                                            source={pwrdByStravaBig}\n                                        />}\n                                </View>\n                    }\n                </SafeAreaView>\n            </SafeAreaProvider>\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\"\n    },\n    topBar: {\n        height: 43,\n        backgroundColor: \"#fc5200\",\n    },\n    title: {\n        paddingLeft: 16,\n        fontSize: 32,\n    },\n    item: {\n        marginHorizontal: 16,\n        marginTop: 16,\n        backgroundColor: \"#fc5200\",\n        borderRadius: 20,\n        padding: 16,\n        elevation: 2,\n        boxShadowColor: \"#000\",\n        boxShadowOffset: {\n            width: 0,\n            height: 2\n        },\n        boxShadowOpacity: 0.25,\n        boxShadowRadius: 4,\n    },\n    input: {\n        backgroundColor: \"white\",\n        width: 100,\n        fontSize: 24,\n        textAlign: \"center\",\n        borderRadius: 10\n    },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/FastestX/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [941], () => (__webpack_require__(605)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [941], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ActivityMap","props","center","polygonCenter","positions","fastestLatlng","length","latlng","EPSG3857","mapShapes","shapeType","color","id","map","el","lat","lng","push","initialPosition","_jsx","_Fragment","children","Pressable","style","width","height","ExpoLeaflet","loadingIndicator","ActivityIndicator","onMessage","mapCenterPosition","mapLayers","attribution","baseLayerIsChecked","baseLayerName","layerType","url","mapOptions","zoomControl","Activity","useEffect","LayoutAnimation","configureNext","Presets","easeInEaseOut","setExpanded","setFastestDistance","undefined","setDistanceMeasure","distanceMeasure","setTimeMeasure","timeMeasure","setLoading","setPositions","_useState","useState","_useState2","_slicedToArray","fastestDistance","_useState3","_useState4","loading","_useState5","_useState6","expanded","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_findFastestDistance","_asyncToGenerator","trivial_winner","start","distance","time","end","heartrate","elevation","gain","loss","range","_streams$altitude","_streams$latlng","streams","getStreams","activity","altitudeStream","altitude","data","latlngStream","total_elevation_loss","Math","round","reduce","acc","curr","arr","_streams2$altitude","_streams2$distance","_streams2$time","_streams2$heartrate","_streams2$latlng","distanceStream","timeStream","heartrateStream","_objectSpread","fastestSegment","total_elevation_gain","elapsed_time","timeStreamUpperLimit","slice","_loop2","_i","j","indexOf","i","find","currentSegment","pace","timeInHoursAndMinutes","relevantAltitudeStream","_streams$altitude2","_streams$distance","_streams$time","_streams$heartrate","_streams$latlng2","distanceStreamUpperLimit","_loop","apply","arguments","hours","floor","rest","minutes","_x","_getStreams","fetch","credentials","accessToken","then","res","json","_jsxs","styles","item","onPress","findFastestDistance","Text","name","textAlign","Date","start_date","toLocaleDateString","Linking","openURL","textDecorationColor","textDecorationLine","View","separator","_positions$latlng","_positions$latlng2","_positions$latlng3","modalContainer","modalLine","justifyContent","isNaN","Ionicons","alignSelf","size","MaterialCommunityIcons","average_speed","display","fontSize","fontWeight","average_heartrate","replace","flex","marginRight","alignItems","marginLeft","marginTop","FontAwesome5","StyleSheet","create","marginHorizontal","backgroundColor","borderRadius","padding","boxShadowColor","boxShadowOffset","boxShadowOpacity","boxShadowRadius","modal","flexDirection","marginBottom","Feed","activities","setActivities","refreshing","setRefreshing","page","setPage","getActivities","_getActivities","refresh","forEach","isExpanded","concat","catch","error","console","log","finally","FlatList","maxWidth","renderItem","_ref","keyExtractor","keyboardDismissMode","onRefresh","ListHeaderComponent","TextInput","input","contextMenuHidden","selectionColor","inputMode","onChangeText","text","number","parseInt","toString","value","ListFooterComponent","pwrdByStravaSmall","require","connectWithStrava","pwrdByStravaBig","demo","WebBrowser","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","revocationEndpoint","App","loggedIn","setLoggedIn","setCredentials","errorState","setErrorState","messyOAuthRedirectFromStravaApp","setMessyOAuthRedirectFromStravaApp","setAccessToken","exchangeCodeAsync","clientId","request","redirectUri","makeRedirectUri","scheme","path","code","response","params","AsyncStorage","setItem","JSON","stringify","_useAuthRequest","useAuthRequest","scopes","_useAuthRequest2","promptAsync","handleLogout","_ref2","method","removeItem","checkStoredCredentials","_ref3","getStoredCredentials","_ref4","getItem","storedCredentials","parse","TokenResponse","isTokenFresh","refreshedCredentials","refreshAsync","refreshToken","handleChromeMobileOpeningNewTab","_ref5","URLSearchParams","window","location","search","paramsObj","_ref6","_ref7","key","newURL","href","split","history","pushState","document","title","scope","state","type","Platform","OS","UIManager","setLayoutAnimationEnabledExperimental","StatusBar","SafeAreaProvider","SafeAreaView","topBar","Image","contentFit","source","AntDesign","justifySelf","container","paddingLeft","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}